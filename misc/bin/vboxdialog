#!/usr/bin/env python
# coding: utf-8

import sys
import dialog

from subprocess import Popen, PIPE

progname = 'vboxdialog'

def err(s):
    sys.stderr.write(progname + ': ' + s + '\n')
    sys.stderr.flush()
    sys.exit(1)

def vboxmanage(command):
    stdout = Popen([ 'vboxmanage', '-q' ] + list(command), stdout = PIPE).stdout
    return stdout.readlines()

def get_vms(state):
    """
    Return list of vms
    """
    stdout = vboxmanage(( 'list', state ))
    vms = {}
    for line in stdout:
        idx = line.rindex('"')
        name = line[1 : idx]
        id_ = line[idx + 2 : -1]
        vms[id_] = name
    return vms

def main():
    cmds = ( 'poweron', 'poweroff', 'powerbutton' )

    try:
        d = dialog.Dialog(dialog = 'whiptail')
    except dialog.ExecutableNotFound:
        d = dialog.Dialog(dialog = 'dialog')
        d.add_persistent_args(( '--keep-tite', ))

    args = sys.argv[1:]

    if len(args) == 1:
        cmd = args[0]
    elif len(args) <= 0:
        choices = [ ( c, '' ) for c in cmds ]
        while True:
            (code, cmd) = d.menu('Commands', choices = choices)
            if code == d.DIALOG_ESC:
                if d.yesno('Do you want to abort?') == d.DIALOG_OK:
                    sys.exit(1)
            elif code == d.DIALOG_CANCEL:
                sys.exit(1)
            else:
                break
    else:
        err('invalid number of arguments')

    if cmd == 'poweron':
        state = 'vms'
        vboxcmd = [ 'startvm', 0, '--type=headless' ]
    elif cmd == 'poweroff':
        state = 'runningvms'
        vboxcmd = [ 'controlvm', 0, 'poweroff' ]
    elif cmd == 'powerbutton':
        state = 'runningvms'
        vboxcmd = [ 'controlvm', 0, 'acpipowerbutton' ]
    else:
        err('%s: invalid command' % (cmd))

    vms = get_vms(state)
    if cmd == 'poweron':
        for vm in get_vms('runningvms'):
            if vm in vms:
                del vms[vm]
    choices = [ ( vms[i], i, 0 ) for i in vms ]
    while True:
        (code, names) = d.checklist('Virtual Machines', choices = choices)
        if code == d.DIALOG_ESC:
            if d.yesno('Do you want to abort?') == d.DIALOG_OK:
                sys.exit(1)
        elif code == d.DIALOG_CANCEL:
            sys.exit(1)
        else:
            break

    index = vboxcmd.index(0)
    for name in names:
        cmd = vboxcmd
        cmd[index] = name
        print '"%s" =' % (name), vboxmanage(cmd)

if __name__ == '__main__':
    main()

# vim:set et:
# vi:set sw=4 ts=4:
